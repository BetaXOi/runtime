// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: event.proto

package grpc

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf2 "github.com/gogo/protobuf/types"

import context "golang.org/x/net/context"
import grpc1 "google.golang.org/grpc"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc1.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc1.SupportPackageIsVersion4

// Client API for EventService service

type EventServiceClient interface {
	Ready(ctx context.Context, in *google_protobuf2.Empty, opts ...grpc1.CallOption) (*google_protobuf2.Empty, error)
}

type eventServiceClient struct {
	cc *grpc1.ClientConn
}

func NewEventServiceClient(cc *grpc1.ClientConn) EventServiceClient {
	return &eventServiceClient{cc}
}

func (c *eventServiceClient) Ready(ctx context.Context, in *google_protobuf2.Empty, opts ...grpc1.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc1.Invoke(ctx, "/grpc.EventService/Ready", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for EventService service

type EventServiceServer interface {
	Ready(context.Context, *google_protobuf2.Empty) (*google_protobuf2.Empty, error)
}

func RegisterEventServiceServer(s *grpc1.Server, srv EventServiceServer) {
	s.RegisterService(&_EventService_serviceDesc, srv)
}

func _EventService_Ready_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf2.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).Ready(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.EventService/Ready",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).Ready(ctx, req.(*google_protobuf2.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _EventService_serviceDesc = grpc1.ServiceDesc{
	ServiceName: "grpc.EventService",
	HandlerType: (*EventServiceServer)(nil),
	Methods: []grpc1.MethodDesc{
		{
			MethodName: "Ready",
			Handler:    _EventService_Ready_Handler,
		},
	},
	Streams:  []grpc1.StreamDesc{},
	Metadata: "event.proto",
}

func init() { proto.RegisterFile("event.proto", fileDescriptorEvent) }

var fileDescriptorEvent = []byte{
	// 123 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4e, 0x2d, 0x4b, 0xcd,
	0x2b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x49, 0x2f, 0x2a, 0x48, 0x96, 0x92, 0x4e,
	0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x07, 0x8b, 0x25, 0x95, 0xa6, 0xe9, 0xa7, 0xe6, 0x16, 0x94,
	0x54, 0x42, 0x94, 0x18, 0xb9, 0x73, 0xf1, 0xb8, 0x82, 0x74, 0x04, 0xa7, 0x16, 0x95, 0x65, 0x26,
	0xa7, 0x0a, 0x99, 0x73, 0xb1, 0x06, 0xa5, 0x26, 0xa6, 0x54, 0x0a, 0x89, 0xe9, 0x41, 0xb4, 0xe9,
	0xc1, 0xb4, 0xe9, 0xb9, 0x82, 0xb4, 0x49, 0xe1, 0x10, 0x77, 0xe2, 0x39, 0xf1, 0x48, 0x8e, 0xf1,
	0xc2, 0x23, 0x39, 0xc6, 0x07, 0x8f, 0xe4, 0x18, 0x93, 0xd8, 0xc0, 0xb2, 0xc6, 0x80, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x73, 0xae, 0xb2, 0xe3, 0x8f, 0x00, 0x00, 0x00,
}
